// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply  from :'config.gradle'




buildscript {



   /* repositories {
      *//*  jcenter()
        mavenCentral()*//*
        maven { url 'http://repo1.maven.org/maven2' }
        maven { url 'https://jitpack.io' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }*/
    //依赖
    ext.deps = [
            "appcompat"       : "androidx.appcompat:appcompat:1.1.0",
            "constraintlayout": "androidx.constraintlayout:constraintlayout:1.1.3"
    ]

    System.properties['com.android.build.gradle.overrideVersionCheck'] = 'true'
    repositories {
        maven {
            url "https://maven.aliyun.com/repository/google"
        }
        maven {
            url "https://maven.aliyun.com/repository/jcenter"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'

        //这里配置 apt 供butterknife使用
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'

        //引入 butterknife 插件
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.2.0'

        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {

    System.properties['com.android.build.gradle.overrideVersionCheck'] = 'true'
    repositories {
        maven {
            url "https://maven.aliyun.com/repository/google"
        }
        maven {
            url "https://maven.aliyun.com/repository/jcenter"
        }
    }
    gradle.taskGraph.whenReady {
        tasks.each { task ->
            if (task.name == 'mockableAndroidJar') {
                task.enabled = false
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
